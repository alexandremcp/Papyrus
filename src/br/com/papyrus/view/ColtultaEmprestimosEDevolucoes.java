package br.com.papyrus.view;

import br.com.papyrus.model.CriarConexao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 * Esta classe cria uma consulta de visualização de todas as tabelas para dar um
 * panorama geral das informações no banco de dados
 *
 * @author Alexandre Luiz dos Santos
 * @version 1.0
 */
public class ColtultaEmprestimosEDevolucoes extends javax.swing.JInternalFrame {

    public ColtultaEmprestimosEDevolucoes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblConsultaEmprestimos = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtContultaEmprestimos = new javax.swing.JTable();
        lblConsultaDevolucoes = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jtContultaDevolucoes = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CONSULTAR EMPRESTIMOS E DEVOLUÇÕES");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblConsultaEmprestimos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblConsultaEmprestimos.setText("Emprestimos");
        getContentPane().add(lblConsultaEmprestimos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1220, 28));

        jtContultaEmprestimos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATA", "HORA", "ID", "LEITOR", "ID", "TÍTULO"
            }
        ));
        jtContultaEmprestimos.setColumnSelectionAllowed(true);
        jScrollPane5.setViewportView(jtContultaEmprestimos);
        jtContultaEmprestimos.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jtContultaEmprestimos.getColumnModel().getColumnCount() > 0) {
            jtContultaEmprestimos.getColumnModel().getColumn(0).setMinWidth(100);
            jtContultaEmprestimos.getColumnModel().getColumn(0).setMaxWidth(100);
            jtContultaEmprestimos.getColumnModel().getColumn(1).setMinWidth(100);
            jtContultaEmprestimos.getColumnModel().getColumn(1).setMaxWidth(100);
            jtContultaEmprestimos.getColumnModel().getColumn(2).setMinWidth(50);
            jtContultaEmprestimos.getColumnModel().getColumn(2).setMaxWidth(50);
            jtContultaEmprestimos.getColumnModel().getColumn(3).setMinWidth(300);
            jtContultaEmprestimos.getColumnModel().getColumn(4).setMinWidth(50);
            jtContultaEmprestimos.getColumnModel().getColumn(4).setMaxWidth(50);
            jtContultaEmprestimos.getColumnModel().getColumn(5).setMinWidth(300);
        }

        getContentPane().add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1220, 248));

        lblConsultaDevolucoes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblConsultaDevolucoes.setText("Devoluções");
        getContentPane().add(lblConsultaDevolucoes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 1220, 28));

        jtContultaDevolucoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DATA", "HORA", "ID", "LEITOR", "ID", "TÍTULO"
            }
        ));
        jScrollPane7.setViewportView(jtContultaDevolucoes);
        jtContultaDevolucoes.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (jtContultaDevolucoes.getColumnModel().getColumnCount() > 0) {
            jtContultaDevolucoes.getColumnModel().getColumn(0).setMinWidth(100);
            jtContultaDevolucoes.getColumnModel().getColumn(0).setMaxWidth(100);
            jtContultaDevolucoes.getColumnModel().getColumn(1).setMinWidth(100);
            jtContultaDevolucoes.getColumnModel().getColumn(1).setMaxWidth(100);
            jtContultaDevolucoes.getColumnModel().getColumn(2).setMinWidth(50);
            jtContultaDevolucoes.getColumnModel().getColumn(2).setMaxWidth(50);
            jtContultaDevolucoes.getColumnModel().getColumn(3).setMinWidth(300);
            jtContultaDevolucoes.getColumnModel().getColumn(4).setMinWidth(50);
            jtContultaDevolucoes.getColumnModel().getColumn(4).setMaxWidth(50);
            jtContultaDevolucoes.getColumnModel().getColumn(5).setMinWidth(300);
        }

        getContentPane().add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 1220, 248));

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**/
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        contultaEmprestimos();
        consultaDevolucoes();
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jtContultaDevolucoes;
    private javax.swing.JTable jtContultaEmprestimos;
    private static javax.swing.JLabel lblConsultaDevolucoes;
    private static javax.swing.JLabel lblConsultaEmprestimos;
    // End of variables declaration//GEN-END:variables

    private void contultaEmprestimos() {
        try {
            Connection conn2 = CriarConexao.abrirConexao();
            String SQL2 = "SELECT COUNT(Leitores_Id) FROM emprestimos";
            Statement stm2 = conn2.createStatement();
            ResultSet rs2 = stm2.executeQuery(SQL2);

            if (rs2.next()) {
                int resultado = rs2.getInt(1);
                String texto = "Total de Emprestimos: " + String.valueOf(resultado);
                lblConsultaEmprestimos.setText(texto);
            }

            Connection conn = CriarConexao.abrirConexao();
            String SQL = "SELECT emp.Emprestimo, emp.Hora, lei.Id, lei.Nome AS Leitor, "
                    + "ace.Id, ace.Titulo "
                    + "FROM emprestimos emp "
                    + "JOIN leitores lei ON lei.Id = emp.Leitores_Id "
                    + "JOIN acervo ace ON ace.Id = emp.Acervo_id "
                    + "ORDER BY emp.Emprestimo;";
            PreparedStatement pstm = conn.prepareStatement(SQL);
            ResultSet rs = pstm.executeQuery(SQL);
            ResultSetMetaData rsm = rs.getMetaData();

            ArrayList<Object[]> data = new ArrayList<>();
            while (rs.next()) {
                Object[] rows = new Object[rsm.getColumnCount()];
                for (int i = 0; i < rows.length; i++) {
                    rows[i] = rs.getObject(i + 1);
                }
                data.add(rows);
            }
            DefaultTableModel dtm = (DefaultTableModel) this.jtContultaEmprestimos.getModel();
            for (int i = 0; i < data.size(); i++) {
                dtm.addRow(data.get(i));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ColtultaEmprestimosEDevolucoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void consultaDevolucoes() {
        try {
            Connection conn2 = CriarConexao.abrirConexao();
            String SQL2 = "SELECT COUNT(Leitores_Id) FROM devolucoes";
            Statement stm2 = conn2.createStatement();
            ResultSet rs2 = stm2.executeQuery(SQL2);

            if (rs2.next()) {
                int resultado = rs2.getInt(1);
                String texto = "Total de Devoluções: " + String.valueOf(resultado);
                lblConsultaDevolucoes.setText(texto);
            }

            Connection conn = CriarConexao.abrirConexao();
            String SQL = "SELECT dev.Devolucao, dev.Hora, lei.Id, "
                    + "lei.Nome AS Leitor, ace.Id, ace.Titulo "
                    + "FROM devolucoes dev "
                    + "JOIN leitores lei ON lei.Id = dev.Leitores_Id "
                    + "JOIN acervo ace ON ace.Id = dev.Acervo_id "
                    + "ORDER BY dev.Devolucao;";
            PreparedStatement pstm = conn.prepareStatement(SQL);
            ResultSet rs = pstm.executeQuery(SQL);
            ResultSetMetaData rsm = rs.getMetaData();

            ArrayList<Object[]> data = new ArrayList<>();
            while (rs.next()) {
                Object[] rows = new Object[rsm.getColumnCount()];
                for (int i = 0; i < rows.length; i++) {
                    rows[i] = rs.getObject(i + 1);
                }
                data.add(rows);
            }
            DefaultTableModel dtm = (DefaultTableModel) this.jtContultaDevolucoes.getModel();
            for (int i = 0; i < data.size(); i++) {
                dtm.addRow(data.get(i));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ColtultaEmprestimosEDevolucoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
